// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"github.com/go-playground/validator/v10"
	"github.com/go-redis/redis/v8"
	"github.com/zero-mobile/user-portal-api/config"
	"github.com/zero-mobile/user-portal-api/internal/adapters/controller"
	"github.com/zero-mobile/user-portal-api/internal/adapters/repository"
	"github.com/zero-mobile/user-portal-api/internal/application/domain"
	"github.com/zero-mobile/user-portal-api/internal/application/service"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	db, err := NewDatabaseConnection()
	if err != nil {
		return nil, err
	}
	accountOutPort := repository.NewAccountRepository(db)
	accountInPort := service.NewAccountRegistrationService(accountOutPort)
	validate := NewValidator()
	accountController := controller.NewAccountController(accountInPort, validate)
	client := NewRedisClient()
	authRepository := repository.NewAuthRepository(client)
	authInPort := service.NewAuthRegistrationService(authRepository)
	authController := controller.NewAuthController(authInPort, validate)
	controllers := controller.NewControllers(accountController, authController)
	app := &App{
		Controllers: controllers,
		DB:          db,
		RedisClient: client,
	}
	return app, nil
}

// wire.go:

type App struct {
	Controllers *controller.Controllers
	DB          *gorm.DB
	RedisClient *redis.Client
}

func NewDatabaseConnection() (*gorm.DB, error) {
	dsn := config.Cfg.Database.DSN
	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})
	if err != nil {
		return nil, err
	}

	err = db.AutoMigrate(&domain.Account{})
	if err != nil {
		return nil, err
	}

	return db, nil
}

func NewValidator() *validator.Validate {
	return validator.New()
}

func NewRedisClient() *redis.Client {
	rdb := redis.NewClient(&redis.Options{
		Addr:     config.Cfg.Redis.Addr,
		Password: config.Cfg.Redis.Password,
		DB:       config.Cfg.Redis.DB,
	})
	return rdb
}
